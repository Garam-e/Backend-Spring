# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Copy application.yml
        env:
          OCCUPY_DEPLOY: ${{ secrets.OCCUPY_DEPLOY }}
          OCCUPY_DEPLOY_DIR: src/main/resources
          OCCUPY_DEPLOY_TEST_DIR: src/test/resources
          OCCUPY_DEPLOY_DIR_FILE_NAME: application.yml
        run: echo $OCCUPY_DEPLOY | base64 --decode > $OCCUPY_DEPLOY_DIR/$OCCUPY_DEPLOY_DIR_FILE_NAME

      - name: Build with Gradle
        uses: gradle/gradle-build-action@bd5760595778326ba7f1441bcf7e88b49de61a25 # v2.6.0
        with:
          arguments: build

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: cicdsample
          path: build/libs/*.jar

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: cicdsample
#      - name: Setup SSH
#        uses: webfactory/ssh-agent@v0.5.4
#        with:
#          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
#      - name: SCP transfer
#        run:
#          scp *.jar ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }}:~/cicd
      - name: Deploy to Server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "*.jar"
          target: "~/cicd"
      - name: Use SSH agent for remote commands
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          eval `ssh-agent -s`
          ssh-add - <<< "${{ secrets.SSH_PRIVATE_KEY }}"
#          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} "sudo fuser -k 8080/tcp"
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} "sudo nohup java -jar ~/cicd/*.jar &"

#      - name: Execute remote commands
#        run: |
#          ssh ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} -i ${{ secrets.SSH_PRIVATE_KEY }} "sudo fuser -k 8080/tcp"
#          ssh ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} -i ${{ secrets.SSH_PRIVATE_KEY }} "sudo nohup java -jar ~/cicd/*.jar &"
#          ssh ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} "sudo fuser -k 8080/tcp"
#          ssh ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} "sudo nohup java -jar ~/cicd/*.jar &"
